{"version":3,"file":"static/js/257.5d5fe260.chunk.js","mappings":"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","sources":["helpers/TmdbApi.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '3a8b38ad10d0523ba714a93ac8f26385'\n\nexport const fetchTrending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nexport const fetchSearchKeyword = async keyword => {\n    const response = await axios.get(\n        `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n    );\n    return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const fetchActors = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n    const response = await axios.get(\n        `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 24px;\n  gap: 24px;\n`;\n\nexport const List = styled.ul`\n  display: inline-flex;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 20px;\n  color: #080808;\n\n  &:hover {\n    color: tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #080808;\n  color: #080808;\n  font-weight: 600;\n  font-size: 20px;\n  border-radius: 4px 8px;\n\n  &:hover {\n    color: tomato;\n    border: 2px solid tomato;\n  }\n`;","import { fetchMovieDetails } from \"helpers/TmdbApi\";\nimport { useEffect, useState } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { Button, Container, LinkInfo, List, ListInfo } from \"./MovieDetails.styled\";\nimport Loader from \"components/Loader/Loader\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movieInfo, setMovieInfo] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n\n    useEffect(() => {\n        const fetchMovieDetailsFilms = () => {\n            setLoading(true);\n\n            fetchMovieDetails(movieId)\n                .then(detailMovie => {\n                    setMovieInfo(detailMovie);\n                })\n                .catch(error => {\n                    console.log(error);\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        };\n\n        fetchMovieDetailsFilms();\n    }, [movieId]);\n\n    if (!movieInfo) {\n        return;\n    }\n\n    const {\n        title,\n        release_date,\n        popularity,\n        overview,\n        genres,\n        poster_path,\n        original_title,\n    } = movieInfo || {};\n\n    return (\n        <>\n            <Link to={location.state?.from ?? '/'}>\n                <Button type=\"button\">Back</Button>  \n            </Link>\n            {loading && <Loader />}\n            \n            {movieInfo && (\n                <Container>\n                    <img width=\"320px\"\n                        src={\n                            poster_path\n                                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n                        }\n                        alt={original_title}\n                    />\n                    <div>\n                        <h1>\n                            {title} ({release_date.slice(0, 4)})\n                        </h1>\n                        <p>User scoore: {popularity}</p>\n                        <h2>Overview</h2>\n                        <p>{overview}</p>\n                        <h2>Category</h2>\n                        <List>\n                            {genres.map(genre => (\n                                <li key={genre.id}>{genre.name}</li>\n                            ))}\n                        </List>\n                    </div>\n                </Container>\n            )}\n            <hr />\n            <div>\n                <h3>Additional information</h3>\n                <ListInfo>\n                    <li>\n                        <LinkInfo to=\"cast\">Cast</LinkInfo>\n                    </li>\n                    <li>\n                        <LinkInfo to=\"reviews\">Reviews</LinkInfo>\n                    </li>\n                </ListInfo>\n                <hr />\n                <Outlet />\n            </div>\n        </>\n    )\n}\n\nexport default MovieDetails;"],"names":["axios","API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","fetchSearchKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4","Container","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","ListInfo","_templateObject3","LinkInfo","Link","_templateObject4","Button","_templateObject5","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","loading","setLoading","location","useLocation","useEffect","then","detailMovie","catch","error","console","log","finally","title","release_date","popularity","overview","genres","poster_path","original_title","_jsxs","_Fragment","children","_jsx","to","state","from","type","Loader","width","src","alt","slice","map","genre","name","id","Outlet"],"sourceRoot":""}